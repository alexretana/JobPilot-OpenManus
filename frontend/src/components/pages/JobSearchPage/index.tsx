import { Component, createSignal, onMount, Show } from 'solid-js';
import { JobsContainer } from './JobsTab/JobsContainer';
import ApplicationsManager from './ApplicationsTab/ApplicationsManager';
import LeadsManager from './LeadsTab/LeadsManager';

interface JobSearchManagerProps {
  onJobSelect?: (jobId: string) => void;
  onJobSave?: (jobId: string) => void;
  className?: string;
}

type JobSearchTab = 'jobs' | 'applications' | 'leads';

export const JobSearchManager: Component<JobSearchManagerProps> = props => {
  const [activeTab, setActiveTab] = createSignal<JobSearchTab>('jobs');

  // Session storage key for remembering the active tab
  const STORAGE_KEY = 'jobSearchManager_activeTab';

  // Load the last selected tab from session storage on mount
  onMount(() => {
    const savedTab = sessionStorage.getItem(STORAGE_KEY) as JobSearchTab;
    if (savedTab && ['jobs', 'applications', 'leads'].includes(savedTab)) {
      setActiveTab(savedTab);
    }
  });

  // Save tab selection to session storage when it changes
  const handleTabChange = (tab: JobSearchTab) => {
    setActiveTab(tab);
    sessionStorage.setItem(STORAGE_KEY, tab);
  };

  const handleJobSelect = (jobId: string) => {
    props.onJobSelect?.(jobId);
  };

  const handleJobSave = (jobId: string) => {
    props.onJobSave?.(jobId);
  };

  return (
    <div class={`w-full h-full flex flex-col ${props.className || ''}`}>
      {/* Tab Navigation with Quick Stats */}
      <div class='flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-4'>
        <div class='tabs tabs-boxed justify-start'>
          <button
            class={`tab tab-lg gap-2 ${activeTab() === 'jobs' ? 'tab-active' : ''}`}
            onClick={() => handleTabChange('jobs')}
          >
            <svg
              xmlns='http://www.w3.org/2000/svg'
              class='h-5 w-5'
              viewBox='0 0 1024 1024'
              fill='currentColor'
            >
              <g fill='currentColor'>
                <path d='M433.75 16.61 C435.65 16.61 437.56 16.60 439.46 16.60 C444.58 16.59 449.69 16.59 454.81 16.60 C460.20 16.61 465.58 16.60 471.98 16.60 C481.02 16.58 490.07 16.59 499.11 16.61 C509.52 16.63 519.93 16.62 530.34 16.60 C539.33 16.58 548.32 16.58 557.31 16.59 C562.66 16.60 567.00 16.60 573.35 16.59 C578.38 16.58 583.41 16.59 588.44 16.61 C590.27 16.61 592.10 16.61 593.93 16.61 C609.45 16.55 624.67 17.93 639.44 23.07 C640.31 23.37 641.17 23.66 642.06 23.97 C656.84 29.25 670.09 36.80 681.0 47.01 C681.51 47.44 682.02 47.88 682.55 48.32 C708.34 70.40 724.32 101.25 728.0 135.01 C728.32 140.90 728.23 146.79 728.19 152.68 C728.19 154.35 728.18 156.01 728.18 157.68 C728.18 162.01 728.15 166.34 728.13 170.66 C728.11 175.10 728.10 179.54 728.10 183.98 C728.08 192.65 728.04 201.33 728.0 210.01 C728.95 210.01 729.89 210.01 730.87 210.0 C753.98 209.91 777.10 209.84 800.21 209.80 C811.39 209.78 822.57 209.76 833.75 209.71 C843.50 209.67 853.25 209.64 862.0 209.63 C867.16 209.62 872.31 209.61 877.47 209.58 C882.34 209.56 887.20 209.55 892.07 209.55 C893.84 209.55 895.61 209.54 897.38 209.53 C924.25 209.30 946.50 216.87 966.0 236.01 C966.69 236.67 967.37 237.33 968.08 238.01 C980.31 250.70 987.23 267.84 989.11 285.19 C989.20 285.96 989.28 286.73 989.37 287.53 C990.31 297.06 990.27 306.58 990.23 316.14 C990.23 318.19 990.23 320.24 990.23 322.30 C990.23 327.81 990.22 333.32 990.21 338.83 C990.19 344.61 990.19 350.39 990.19 356.18 C990.18 367.10 990.16 378.02 990.14 388.94 C990.12 401.38 990.11 413.83 990.10 426.27 C990.08 451.85 990.04 477.43 990.0 503.01 C987.0 503.01 987.0 503.01 984.47 500.55 C983.47 499.44 982.48 498.32 981.5 497.19 C980.42 495.99 979.34 494.79 978.25 493.60 C977.71 493.0 977.16 492.39 976.60 491.76 C969.32 483.78 961.47 476.70 953.0 470.01 C952.24 469.38 951.47 468.75 950.68 468.10 C899.32 425.85 828.71 400.79 762.0 404.01 C761.03 404.06 760.06 404.10 759.06 404.15 C717.89 406.29 679.24 415.21 642.0 433.01 C641.30 433.34 640.60 433.67 639.87 434.01 C614.40 446.01 591.35 462.32 570.77 481.46 C568.55 483.50 566.31 485.45 564.0 487.38 C554.29 495.84 546.11 505.99 538.36 516.22 C537.46 517.41 536.56 518.59 535.65 519.76 C527.52 530.31 520.58 541.43 514.0 553.01 C513.53 553.83 513.06 554.65 512.58 555.50 C494.69 587.19 484.21 622.11 479.0 658.01 C478.87 658.91 478.74 659.81 478.60 660.74 C472.51 705.05 480.34 748.35 492.0 791.01 C491.15 791.86 490.31 792.70 489.43 793.57 C481.41 801.57 473.39 809.58 465.37 817.58 C461.25 821.70 457.13 825.81 453.01 829.92 C449.03 833.90 445.04 837.87 441.06 841.85 C439.55 843.36 438.03 844.87 436.52 846.38 C434.39 848.51 432.26 850.64 430.13 852.77 C429.20 853.70 429.20 853.70 428.25 854.64 C412.22 870.71 400.56 888.66 392.76 909.98 C391.88 912.34 390.94 914.67 390.0 917.01 C354.46 917.08 318.92 917.13 283.37 917.16 C279.17 917.17 274.97 917.17 270.77 917.17 C269.93 917.17 269.10 917.17 268.23 917.17 C254.71 917.18 241.19 917.21 227.67 917.24 C213.78 917.27 199.90 917.29 185.01 917.29 C176.45 917.30 167.89 917.31 159.33 917.33 C153.45 917.35 147.57 917.35 141.69 917.35 C138.31 917.35 134.92 917.35 131.53 917.36 C101.67 917.48 77.16 912.44 54.81 891.13 C32.44 867.91 30.84 839.60 30.88 809.11 C30.88 806.90 30.88 804.69 30.87 802.48 C30.87 796.44 30.87 790.40 30.87 784.36 C30.88 778.50 30.88 772.65 30.87 766.79 C30.87 754.08 30.87 741.38 30.87 728.67 C30.88 717.55 30.88 706.43 30.88 695.31 C30.88 694.57 30.88 693.83 30.88 693.07 C30.88 690.07 30.88 687.07 30.88 684.08 C30.88 655.96 30.88 627.85 30.88 599.73 C30.89 574.78 30.88 549.83 30.88 524.87 C30.88 496.82 30.88 468.76 30.88 440.69 C30.88 437.70 30.88 434.70 30.88 431.71 C30.88 430.97 30.88 430.23 30.88 429.47 C30.88 418.36 30.88 407.25 30.88 396.14 C30.88 383.50 30.88 370.86 30.88 358.22 C30.88 351.78 30.88 345.33 30.88 338.88 C30.88 332.98 30.88 327.07 30.88 321.17 C30.88 319.04 30.88 316.91 30.88 314.78 C30.85 282.81 34.69 257.51 57.19 233.32 C72.65 218.45 94.56 209.80 115.90 209.89 C117.05 209.89 117.05 209.89 118.22 209.89 C120.77 209.89 123.33 209.89 125.88 209.89 C127.71 209.90 129.55 209.90 131.38 209.90 C136.34 209.90 141.31 209.90 146.27 209.90 C151.47 209.91 156.67 209.91 161.86 209.91 C171.70 209.91 181.54 209.92 191.37 209.93 C202.56 209.95 213.76 209.95 224.95 209.96 C247.98 209.97 270.0 209.99 294.0 210.01 C294.0 208.66 294.0 208.66 294.0 207.28 C293.92 198.72 293.88 190.16 293.85 181.61 C293.83 177.21 293.81 172.81 293.78 168.41 C293.75 164.15 293.73 159.89 293.72 155.63 C293.72 154.02 293.71 152.41 293.69 150.80 C293.54 135.67 295.11 120.82 300.13 106.45 C300.43 105.58 300.73 104.70 301.04 103.81 C313.03 70.21 338.44 43.47 370.5 28.20 C390.20 19.23 410.29 16.55 433.75 16.61 Z M412.0 135.0 C397.06 154.80 406.0 196.88 406.0 210.01 C475.30 210.01 544.60 210.01 616.0 210.01 C620.0 175.55 620.0 175.55 611.25 135.20 C604.96 129.09 598.47 127.89 589.93 127.87 C588.88 127.87 588.88 127.87 587.81 127.86 C585.47 127.85 583.13 127.85 580.79 127.85 C579.11 127.84 577.43 127.84 575.75 127.84 C571.19 127.82 566.63 127.82 562.06 127.81 C559.21 127.81 556.36 127.80 553.51 127.80 C544.58 127.78 535.65 127.77 526.71 127.77 C516.42 127.77 506.12 127.75 495.82 127.72 C487.86 127.70 479.89 127.69 471.92 127.69 C467.17 127.68 462.41 127.68 457.66 127.66 C453.18 127.65 448.71 127.64 444.23 127.65 C442.59 127.65 440.96 127.65 439.32 127.64 C424.90 127.37 424.90 127.37 412.0 135.0 Z' />
                <path d='M905 520 C905.89 520.69 906.77 521.39 907.68 522.10 C918.18 530.48 928.55 539.52 937 550 C937.91 551.10 938.82 552.20 939.73 553.29 C971.49 591.91 989.26 639.06 991 689 C991.06 690.48 991.06 690.48 991.13 692.0 C992.32 748.47 971.07 804.21 932.50 845.32 C930.37 847.60 928.33 849.93 926.31 852.31 C922.85 856.28 919.07 859.65 915 863 C914.22 863.65 914.22 863.65 913.42 864.31 C866.58 903.16 807.86 921.88 747 916.31 C716.83 913.02 689.10 903.89 662.21 890.0 C659.94 888.80 659.94 888.80 657 889 C654.91 890.66 654.91 890.66 652.75 892.93 C651.88 893.80 651.01 894.68 650.12 895.57 C649.16 896.55 648.20 897.53 647.24 898.51 C646.23 899.53 645.22 900.56 644.21 901.58 C642.02 903.78 639.84 905.99 637.67 908.20 C634.21 911.71 630.75 915.20 627.28 918.69 C617.42 928.62 607.58 938.57 597.75 948.54 C592.33 954.03 586.89 959.52 581.44 965.0 C577.0 968.46 573.58 971.93 570.17 975.41 C568.02 977.59 565.86 979.76 563.70 981.92 C562.71 982.92 561.73 983.92 560.75 984.92 C548.18 997.84 533.14 1005.83 514.88 1006.44 C496.83 1005.68 483.19 998.89 471 986 C459.30 972.42 456.71 956.31 458 939 C460.73 920.0 474.06 907.78 487.02 894.87 C487.98 893.90 488.95 892.93 489.92 891.97 C492.51 889.38 495.11 886.79 497.70 884.20 C500.43 881.48 503.15 878.76 505.87 876.04 C511.01 870.90 516.15 865.77 521.30 860.63 C527.16 854.78 533.02 848.93 538.88 843.07 C550.91 831.05 562.96 819.02 575 807 C573.70 803.72 572.32 800.57 570.71 797.43 C545.56 747.44 540.01 693.19 553 639 C553.18 638.23 553.37 637.46 553.56 636.67 C561.82 603.39 579.82 572.31 603 547.21 C604.74 545.29 606.41 543.32 608.06 541.31 C610.73 538.17 613.69 535.52 616.84 532.86 C618.29 531.61 619.71 530.33 621.10 529.02 C651.73 500.17 692.77 482.55 734 476 C734.73 475.88 735.46 475.77 736.21 475.65 C794.92 466.74 857.59 483.0 905 520 Z M707 584 C706.41 584.33 705.83 584.66 705.22 585.0 C675.65 601.81 654.79 629.27 645.56 661.92 C637.13 692.93 641.0 724.30 655 753 C655.48 754.0 655.97 754.99 656.47 756.02 C671.18 784.56 698.62 807.0 729 817 C762.80 827.33 797.59 824.45 829 808.19 C837.01 803.87 844.09 798.92 851 793 C851.51 792.58 852.01 792.15 852.53 791.72 C876.64 771.41 892.22 741.56 895.81 710.26 C898.83 673.89 889.27 640.50 865.73 612.49 C855.75 600.82 844.41 591.54 831 584 C829.92 583.39 828.84 582.79 827.73 582.16 C789.97 562.09 744.10 563.22 707 584 Z' />
              </g>
            </svg>
            Jobs
          </button>
          <button
            class={`tab tab-lg gap-2 ${activeTab() === 'applications' ? 'tab-active' : ''}`}
            onClick={() => handleTabChange('applications')}
          >
            <svg
              xmlns='http://www.w3.org/2000/svg'
              class='h-5 w-5'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z'
              />
            </svg>
            Applications
          </button>
          <button
            class={`tab tab-lg gap-2 ${activeTab() === 'leads' ? 'tab-active' : ''}`}
            onClick={() => handleTabChange('leads')}
          >
            <svg
              xmlns='http://www.w3.org/2000/svg'
              class='h-5 w-5'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z'
              />
            </svg>
            Leads
          </button>
        </div>

        {/* Quick Stats */}
        <div class='stats stats-horizontal shadow bg-base-100'>
          <div class='stat place-items-center'>
            <div class='stat-title text-xs'>Jobs</div>
            <div class='stat-value text-sm'>—</div>
          </div>
          <div class='stat place-items-center'>
            <div class='stat-title text-xs'>Applications</div>
            <div class='stat-value text-sm'>—</div>
          </div>
          <div class='stat place-items-center'>
            <div class='stat-title text-xs'>Leads</div>
            <div class='stat-value text-sm'>—</div>
          </div>
        </div>
      </div>

      {/* Tab Content */}
      <div class='flex-1 min-h-0'>
        <Show when={activeTab() === 'jobs'}>
          <div class='h-full bg-base-100 rounded-lg p-4 overflow-y-auto'>
            <JobsContainer onJobSelect={handleJobSelect} onJobSave={handleJobSave} />
          </div>
        </Show>

        <Show when={activeTab() === 'applications'}>
          <div class='h-full bg-base-100 rounded-lg overflow-y-auto'>
            <ApplicationsManager />
          </div>
        </Show>

        <Show when={activeTab() === 'leads'}>
          <div class='h-full bg-base-100 rounded-lg overflow-y-auto'>
            <LeadsManager />
          </div>
        </Show>
      </div>
    </div>
  );
};

export default JobSearchManager;
